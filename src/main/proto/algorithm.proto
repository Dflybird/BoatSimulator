syntax = "proto3";

option java_multiple_files = true;
option java_package = "net";
option java_outer_classname = "AlgorithmProto";
option objc_class_prefix = "RTG";

package net;

service Algorithm {
  //获得环境参数
  rpc getSceneParameter(Null) returns (SceneParameter) {}
  //获得观测数据
  rpc getObservation(ObservationRequest) returns (Observation) {}
  //下发控制指令，并得到控制指令的回报
  rpc step(Action) returns (Reward) {}
  //重启仿真
  rpc reset(Null) returns (Null) {}
}

message Vector3 {
  float x = 1;
  //纵坐标
  float y = 2;
  float z = 3;
}

message SceneParameter {
  float ally_max_velocity = 1;
  float enemy_max_velocity = 2;
  float max_x_length = 3;
  float min_x_length = 4;
  float max_z_length = 5;
  float min_z_length = 6;
  //id从0开始编号
  int32 ally_num = 7;
  int32 enemy_num = 8;
  //双方攻击与探测范围
  float ally_attack_range = 9;
  float ally_detect_range = 10;
  float enemy_attack_range = 11;
  float enemy_detect_range = 12;
}

message ObservationRequest {
  //阵营 0:友方 1:敌方
  repeated int32 camp = 1;
}

message Observation {
  repeated TeamObservation team_observation = 1;
}

message TeamObservation {
  //阵营 0:友方 1:敌方
  int32 camp = 1;
  repeated MemberObservation member_observation = 2;
}

message MemberObservation {
  //编号 eg:0,1,2
  int32 id = 1;
  //存活状态 0:死亡 1:存活
  int32 status = 2;
  //自身坐标
  Vector3 self_pos = 3;
  //最近敌方坐标
  Vector3 closest_enemy_pos = 4;
  //最近友方坐标
  Vector3 closest_ally_pos = 5;
  //主舰坐标
  Vector3 main_ship_pos = 6;
  //朝向
  Vector3 forward = 7;
  //自身速度
  Vector3 self_velocity = 8;
}

//控制指令，包含多个团队控制指令
message Action {
  repeated TeamAction team_action = 1;
}

//团体控制指令，包含多个团队成员控制指令
message TeamAction {
  //阵营 0:友方 1:敌方 2:主舰
  int32 camp = 1;
  repeated MemberAction member_action = 2;
}

//成员控制指令，针对具体控制对象
message MemberAction {
  //编号 eg:0,1,2
  int32 id = 1;
  //指令离散还是连续 离散时只关注action_type
  bool discrete = 2;
  // 0:停止
  // 1:直行一档（最慢）
  // 2:一挡左转最大转向角 3:一挡右转最大转向角
  // 4:一挡左转半转向角 5:一挡右转半转向角
  // 6:直行二档（中速）
  // 7:二挡左转最大转向角 8:二挡右转最大转向角
  // 9:二挡左转半转向角 10:二挡右转半转向角
  // 11:直行三档（最快）
  // 12:三挡左转最大转向角 13:三挡右转最大转向角
  // 14:三挡左转半转向角 15:三挡右转半转向角
  int32 action_type = 3;
  //引擎功率，从0到最大功率间的任意数
  float power = 4;
  //转舵角度，从0到180间的任意数，单位度
  float angle = 5;
}

message Reward {
  bool done = 1;
  repeated TeamReward team_reward = 2;
}

message TeamReward {
  //阵营 0:友方 1:敌方
  int32 camp = 1;
  //团队回报
  float reward = 2;
}

message Null {}




